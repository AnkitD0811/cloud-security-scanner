from pydantic import BaseModel, Field
from typing import Annotated, Literal, List, TypedDict
from datetime import datetime

# ====== Data Templates =====

class SecurityIssue(BaseModel):
    """
    Class representing a Security Issue found in the IaC Template
    """

    name: Annotated[str, Field(..., description="Name of the issue")]
    severity: Annotated[Literal["Low", "Medium", "High"], Field(..., description="Severity of the issue")]
    location: Annotated[List[int], Field(..., description="Starting and ending line numbers of the code where the issue is located")]
    confidence_score: Annotated[Literal["Low", "Medium", "High"], Field(..., description="Confidence level for the given issue")]
    problems: Annotated[List[str], Field(..., description="List of possible problems that can arise from the given issue")]
    remedies: Annotated[List[str], Field(..., description="List of possible solutions to fix the issue")]

class SecurityReport(BaseModel):
    """
    Class representing a Security Report. Made on a single IaC template. This Represents the full report.
    """

    name: Annotated[str, Field(..., description="Report Name in the Format FileName+Timestamp(mm:dd:yyyy hh:mm:ss)")]
    summary: Annotated[dict[str, int], Field(..., description="Summary counts: {'count': total, 'low': x, 'medium': y, 'high': z}")]
    timestamp: Annotated[datetime, Field(..., description="Date & Time of creation of the rpeort")]
    file: Annotated[str, Field(..., description="Path to file that was scanned for the report")]
    issues: Annotated[List[SecurityIssue], Field(..., description="List of Security Issues(can be empty if none found)")]

class AIReport(BaseModel):
    """
    Class Representing the parts of SecurityReport to be generated by AI.
    """

    issues: Annotated[List[SecurityIssue], Field(..., description="List of Security Issues(can be empty if none found)")]

# ===== Graph Templates =====

class GraphState(TypedDict):
    """
    Represents the state of the graph
    """

    file_path: Annotated[str, Field(..., description="Location of the IaC template")]
    iac_template: Annotated[str, Field(..., description="IaC Template to be scanned")]
    iac_issues: Annotated[AIReport, Field(..., description="Issues Generated by the AI")]
    report: Annotated[SecurityReport, Field(..., description="Final Generated Report")]